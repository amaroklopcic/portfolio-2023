/* Used this guide for Northern Lights effect: https://blog.lunarlogic.io/2016/let-your-website-cast-the-northern-lights-auroral/ */

@keyframes northern {
  0% {
    transform: translate(5%, -2%);
  }

  25% {
    transform: translate(10%, 7%);
  }

  40% {
    transform: rotate(-10deg);
  }

  60% {
    transform: translate(7%, -2%);
  }

  85% {
    transform: translate(6%, 3%) rotate(12deg);
  }

  100% {
    transform: none;
  }
}

.container {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  position: relative;
}

.auroral-northern {
  position: absolute;
  left: -50%;
  top: -50%;
  width: 200%;
  height: 200%;
  animation-name: northern;
  animation-duration: 8s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  background: linear-gradient(10deg, #a1d9b4 20%, #32988a 40%, #000e3c 70%);
}

.lights {
  width: 200vmax;
  height: 100vmax;
  position: absolute;
  left: 50%;
  top: 0;
  transform: translate(-20%, -55%) rotate(30deg);
  display: flex;
  filter: blur(75px);
}

.light {
  flex: 1;
  /* Northern lights are maybe three hues with some transparency
  thrown in */
  --hue-1: 220;
  --hue-2: 220;
  --hue-3: 220;

  --alpha-1: 10;
  --alpha-2: 10;
  --alpha-3: 10;

  --color-one: hsla(%s, 100%, 50%, %s) % (var(--hue-1) var(--alpha-1));
  --color-two: hsla(%s, 100%, 50%, %s) % (var(--hue-2) var(--alpha-2));
  --color-three: hsla(%s, 100%, 50%, %s) % (var(--hue-3) var(--alpha-3));

  --color-one: #a1d9b4;
  --color-two: #32988a;
  --color-three: #000e3c;

  --up: calc(var(--y, 10) * 2vmax);
  --left: calc(var(--x, 2) * 2vmax);

  /* background-image: linear-gradient(0deg, transparent, var(--color-one) 10%, transparent, var(--color-two) 40%, transparent, var(--color-three) 60%); */
  background-image: linear-gradient(0deg, transparent, var(--color-one) 10%, transparent, var(--color-two) 40%, transparent, var(--color-three) 60%);
  background-size: 100% 40vmax;
  background-position: center bottom;
  background-repeat: no-repeat;
  transform: translate(var(--left), var(--up)) scale(1);
  /* Give it a random animation delay so that the pieces are already moving about    */
  animation: shift calc(var(--duration, 2) * 1s) calc(var(--delay, 0) * -1s) infinite ease;

  @media(max-width 768px) {
    --up: calc(var(--y, 10) * 2vmax);
    --left: calc(var(--x, 2) * 2vmax);
  };
}

@keyframes shift {
  50% {
    transform: translate(0, 0) scale(1);
  }
}

@keyframes flicker {
  0%, 50%, 100% {
    transform: scale(1);
  }
  25% {
    transform: scale(0);
  }
}
